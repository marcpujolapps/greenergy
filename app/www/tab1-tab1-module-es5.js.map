{"version":3,"sources":["webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/tab1/tab1-routing.module.ts","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["routes","path","component","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","Tab1Page","http","ref","consumption","periods","period","predicted_consumption","predicted_generation","price_type","price_type_name","period_name","generation","months","month","month_label","value","display","friendly_month_name","end_date","forecast","from","to","total_months","summary","average_consumption","average_generation","init","getConsumption","createBarChart","Promise","resolve","reject","get","err","console","log","data","detectChanges","ctx","barChart","nativeElement","height","bars","type","labels","map","datasets","stack","label","backgroundColor","options","scales","xAxes","stacked","yAxes","ticks","beginAtZero","selector","template"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Consumo\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Consumo</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-subtitle>{{consumption.from | date:'MMM yyyy'}} - {{consumption.to | date:'MMM yyyy'}}</ion-card-subtitle>\\n      <ion-card-title>Resumen</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-text>Consumo medio: <b>{{consumption.summary.average_consumption}} kWh</b></ion-text><br><br>\\n\\n      <ion-text>Consumo total: <b>{{consumption.summary.consumption}} kWh</b></ion-text><br>\\n      <ion-text *ngFor=\\\"let period of consumption.periods\\\">{{period.period.price_type_name}}: <b>{{period.period.consumption}} kWh</b><br></ion-text>\\n\\n      <canvas #anuallyChart></canvas>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-slides pager=\\\"true\\\">\\n    <ion-slide *ngFor=\\\"let month of months\\\">\\n      <div style=\\\"text-align:left;width:100vw\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>{{month.friendly_month_name}}</ion-card-title>\\n          </ion-card-header>\\n\\n          <ion-card-content>\\n            <ion-text>Punta: <b>{{month.value.consum}} kWh</b></ion-text><br>\\n            <ion-text>Valle: <b>{{month.value | json}} kWh</b></ion-text>\\n          </ion-card-content>\\n        </ion-card>\\n      </div>\\n    </ion-slide>\\n  </ion-slides>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component, ChangeDetectorRef, ViewChild } from \"@angular/core\";\nimport { HTTP } from \"@ionic-native/http/ngx\";\nimport { Chart } from \"chart.js\";\n\n@Component({\n  selector: \"app-tab1\",\n  templateUrl: \"tab1.page.html\",\n  styleUrls: [\"tab1.page.scss\"],\n})\nexport class Tab1Page {\n  @ViewChild(\"anuallyChart\") barChart;\n  bars: any;\n  colorArray: any;\n  consumption: any = {\n    periods: [\n      {\n        period: {\n          predicted_consumption: 63.661,\n          predicted_generation: 0,\n          price_type: \"normal\",\n          price_type_name: \"Punta\",\n          period_name: \"P1\",\n          consumption: 63.661,\n          generation: 0,\n        },\n        months: [\n          {\n            month: \"2020-01\",\n            month_label: \"ENE \\n\\r 2020\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"enero 2020\",\n          },\n          {\n            month: \"2020-02\",\n            month_label: \"FEB\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"febrero 2020\",\n          },\n          {\n            month: \"2020-03\",\n            month_label: \"MAR\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"marzo 2020\",\n          },\n          {\n            month: \"2020-04\",\n            month_label: \"ABR\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"abril 2020\",\n          },\n          {\n            month: \"2020-05\",\n            month_label: \"MAY\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"mayo 2020\",\n          },\n          {\n            month: \"2020-06\",\n            month_label: \"JUN\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"junio 2020\",\n          },\n          {\n            month: \"2020-07\",\n            month_label: \"JUL\",\n            value: {\n              consumption: 63.661,\n              predicted_consumption: 63.661,\n              generation: 0,\n              predicted_generation: 0,\n              display: \"provisional\",\n            },\n            end_date: \"2020-07-31\",\n            friendly_month_name: \"julio 2020\",\n          },\n          {\n            month: \"2020-08\",\n            month_label: \"AGO\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"agosto 2020\",\n          },\n          {\n            month: \"2020-09\",\n            month_label: \"SEP\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"septiembre 2020\",\n          },\n          {\n            month: \"2020-10\",\n            month_label: \"OCT\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"octubre 2020\",\n          },\n          {\n            month: \"2020-11\",\n            month_label: \"NOV\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"noviembre 2020\",\n          },\n          {\n            month: \"2020-12\",\n            month_label: \"DIC\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"diciembre 2020\",\n          },\n        ],\n      },\n      {\n        period: {\n          predicted_consumption: 86.18,\n          predicted_generation: 0,\n          price_type: \"reduced\",\n          price_type_name: \"Valle\",\n          period_name: \"P2\",\n          consumption: 86.18,\n          generation: 0,\n        },\n        months: [\n          {\n            month: \"2020-01\",\n            month_label: \"ENE \\n\\r 2020\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"enero 2020\",\n          },\n          {\n            month: \"2020-02\",\n            month_label: \"FEB\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"febrero 2020\",\n          },\n          {\n            month: \"2020-03\",\n            month_label: \"MAR\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"marzo 2020\",\n          },\n          {\n            month: \"2020-04\",\n            month_label: \"ABR\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"abril 2020\",\n          },\n          {\n            month: \"2020-05\",\n            month_label: \"MAY\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"mayo 2020\",\n          },\n          {\n            month: \"2020-06\",\n            month_label: \"JUN\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"junio 2020\",\n          },\n          {\n            month: \"2020-07\",\n            month_label: \"JUL\",\n            value: {\n              consumption: 86.18,\n              predicted_consumption: 86.18,\n              generation: 0,\n              predicted_generation: 0,\n              display: \"provisional\",\n            },\n            end_date: \"2020-07-31\",\n            friendly_month_name: \"julio 2020\",\n          },\n          {\n            month: \"2020-08\",\n            month_label: \"AGO\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"agosto 2020\",\n          },\n          {\n            month: \"2020-09\",\n            month_label: \"SEP\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"septiembre 2020\",\n          },\n          {\n            month: \"2020-10\",\n            month_label: \"OCT\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"octubre 2020\",\n          },\n          {\n            month: \"2020-11\",\n            month_label: \"NOV\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"noviembre 2020\",\n          },\n          {\n            month: \"2020-12\",\n            month_label: \"DIC\",\n            value: {\n              predicted_consumption: 0,\n              predicted_generation: 0,\n              display: \"no_data\",\n            },\n            friendly_month_name: \"diciembre 2020\",\n          },\n        ],\n      },\n    ],\n    forecast: {\n      predicted_consumption: 149.841,\n      predicted_generation: 0,\n    },\n    from: \"2020-01\",\n    to: \"2020-12\",\n    total_months: 12,\n    summary: {\n      consumption: 149.841,\n      average_consumption: 12.48675,\n      generation: 0,\n      average_generation: 0,\n    },\n  };\n  constructor(public http: HTTP, private ref: ChangeDetectorRef) {\n    this.init();\n  }\n\n  async init() {\n    await this.getConsumption();\n    this.createBarChart();\n  }\n\n  getConsumption() {\n    return new Promise(async (resolve, reject) => {\n      if (this.consumption) {\n        resolve(this.consumption);\n      } else {\n        const data = await this.http\n          .get(\n            \"https://dashboard-api.lucera.es/v1/contracts/electricity/61837/consumption/months?from=2020-01&to=2020-12\",\n            {},\n            {}\n          )\n          .catch((err) => {\n            console.log(err);\n            reject(err);\n          });\n        this.consumption = data;\n        this.ref.detectChanges();\n        resolve(data);\n      }\n    });\n  }\n\n  createBarChart() {\n    let ctx = this.barChart.nativeElement;\n    ctx.height = 200;\n    this.bars = new Chart(this.barChart.nativeElement, {\n      type: \"bar\",\n      data: {\n        labels: this.consumption.periods[0].months.map(\n          (month) => month.month_label\n        ),\n        datasets: this.consumption.periods\n          .map((period) => ({\n            stack: true,\n            label: period.period.price_type_name,\n            data: period.months.map((month) => month.value.consumption || 0),\n            backgroundColor:\n              period.period.price_type_name === \"Punta\"\n                ? \"rgb(247, 105, 69)\"\n                : \"rgb(35, 235, 88)\",\n          })),\n      },\n      options: {\n        scales: {\n          xAxes: {\n            stacked: true,\n          },\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n  }\n}\n"]}